#!/bin/bash

# set up a wallet just for holding the key used during blockchain ignition

bioshost=$BIOS_HOSTNAME
if [ -z "$bioshost" ]; then
   bioshost=localhost
fi

biosport=$BIOS_HTTP_PORT
if [ -z "$biosport" ]; then
    biosport=9776
fi

bioscontractpath=$BIOS_CONTRACT_PATH
if [ -z "$bioscontractpath" ]; then
    # this is defaulted to the version of bios that only requires the preactivate_feature
    # newer versions may require 
    bioscontractpath="unittests/contracts/old_versions/v1.7.0-develop-preactivate_feature/inery.bios"
fi

bioscurrencysymbol=$BIOS_CURRENCY_SYMBOL
if [ -z "$bioscurrencysymbol" ]; then
    bioscurrencysymbol="SYS"
fi

wddir=inery-ignition-wd
wdaddr=localhost:8899
wdurl=http://$wdaddr
# Manual deployers, add a line below this block that looks like:
#    bioshost=$BIOS_HOSTNAME
#    biosport=$BIOS_HTTP_PORT
#    cnt_dir=$CONTRACT_DIR
#    sys=$SYS_CONTRACT
# where $BIOS_HOSTNAME is replaced by the hostname portion of the http-server-address configured
# for the nodine instance running to bios producer
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT envars

logfile=$wddir/bootlog.txt

if [ -e $wddir ]; then
    rm -rf $wddir
fi
mkdir $wddir

step=1
echo Initializing ignition sequence  at $(date) | tee $logfile

echo "FEATURE_DIGESTS: $FEATURE_DIGESTS" >> $logfile

echo "http-server-address = $wdaddr" > $wddir/config.ini

programs/kined/kined --config-dir $wddir --data-dir $wddir --http-max-response-time-ms 99999 2> $wddir/wdlog.txt &
echo $$ > ignition_wallet.pid
echo kined log in $wddir/wdlog.txt >> $logfile
sleep 1

ecmd () {
    echo ===== Start: $step ============ >> $logfile
    echo executing: cline --wallet-url $wdurl --url http://$bioshost:$biosport $* | tee -a $logfile
    echo ----------------------- >> $logfile
    programs/cline/cline  --wallet-url $wdurl --url http://$bioshost:$biosport $* >> $logfile 2>&1
    echo ==== End: $step ============== >> $logfile
    step=$(($step + 1))
}

wcmd () {
    ecmd wallet $*
}

cacmd () {
    programs/cline/cline  --wallet-url $wdurl --url http://$bioshost:$biosport system newaccount --transfer --stake-net "10000000.0000 "$bioscurrencysymbol --stake-cpu "10000000.0000 "$bioscurrencysymbol  --buy-ram "10000000.0000 "$bioscurrencysymbol inery $* >> $logfile 2>&1
    ecmd system regproducer $1 $2
    ecmd system voteproducer prods $1 $1
}

sleep 2
ecmd get info

wcmd create --to-console -n ignition

# Manual deployers, add a line below this block that looks like:
#    wcmd import -n ignition --private-key $PRODKEY[0]
#    wcmd import -n ignition --private-key $PRODKEY[1]
#    ...
#    wcmd import -n ignition --private-key $PRODKEY[20]
# where $BIOSKEY is replaced by the private key for the bios node
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT prodkeys
echo "Activated Features Check:" >> $logfile
curl http://$bioshost:$biosport/v1/chain/get_activated_protocol_features >> $logfile
ecmd set contract inery $bioscontractpath inery.bios.wasm inery.bios.abi

# Preactivate all digests
for digest in $FEATURE_DIGESTS;
do
ecmd push action inery activate "{\"feature_digest\":\"$digest\"}" -p inery
done

# Create required system accounts
ecmd create key --to-console
pubsyskey=`grep "^Public key:" $logfile | tail -1 | sed "s/^Public key://"`
prisyskey=`grep "^Private key:" $logfile | tail -1 | sed "s/^Private key://"`
echo inery.* keys: $prisyskey $pubsyskey >> $logfile
wcmd import -n ignition --private-key $prisyskey
ecmd create account inery inery.bpay $pubsyskey $pubsyskey
ecmd create account inery inery.msig $pubsyskey $pubsyskey
ecmd create account inery inery.names $pubsyskey $pubsyskey
ecmd create account inery inery.ram $pubsyskey $pubsyskey
ecmd create account inery inery.ramfee $pubsyskey $pubsyskey
ecmd create account inery inery.saving $pubsyskey $pubsyskey
ecmd create account inery inery.stake $pubsyskey $pubsyskey
ecmd create account inery inery.token $pubsyskey $pubsyskey
ecmd create account inery inery.vpay $pubsyskey $pubsyskey
ecmd create account inery inery.wrap $pubsyskey $pubsyskey

ecmd set contract inery.token unittests/contracts/inery.token inery.token.wasm inery.token.abi
ecmd set contract inery.msig unittests/contracts/inery.msig inery.msig.wasm inery.msig.abi
ecmd set contract inery.wrap unittests/contracts/inery.wrap inery.wrap.wasm inery.wrap.abi

echo ===== Start: $step ============ >> $logfile
echo executing: cline --wallet-url $wdurl --url http://$bioshost:$biosport push action inery.token create '[ "inery", "10000000000.0000 '$bioscurrencysymbol'" ]' -p inery.token | tee -a $logfile
echo executing: cline --wallet-url $wdurl --url http://$bioshost:$biosport push action inery.token issue '[ "inery", "1000000000.0000 '$bioscurrencysymbol'", "memo" ]' -p inery | tee -a $logfile
echo ----------------------- >> $logfile
programs/cline/cline --wallet-url $wdurl --url http://$bioshost:$biosport push action inery.token create '[ "inery", "10000000000.0000 '$bioscurrencysymbol'" ]' -p inery.token >> $logfile 2>&1
programs/cline/cline --wallet-url $wdurl --url http://$bioshost:$biosport push action inery.token issue '[ "inery", "1000000000.0000 '$bioscurrencysymbol'", "memo" ]' -p inery >> $logfile 2>&1
echo ==== End: $step ============== >> $logfile
step=$(($step + 1))

ecmd set contract inery unittests/contracts/inery.system inery.system.wasm inery.system.abi
programs/cline/cline --wallet-url $wdurl --url http://$bioshost:$biosport push action inery init '[0, "4,'$bioscurrencysymbol'"]' -p inery >> $logfile 2>&1

# Manual deployers, add a series of lines below this block that looks like:
#    cacmd $PRODNAME[0] $OWNERKEY[0] $ACTIVEKEY[0]
#    cacmd $PRODNAME[1] $OWNERKEY[1] $ACTiVEKEY[1]
#    ...
#    cacmd $PRODNAME[20] $OWNERKEY[20] $ACTIVEKEY[20]
# where $PRODNAME is the producer account name and $OWNERKEY and $ACTIVEKEY are both the producer's
# public key
# ------ DO NOT ALTER THE NEXT LINE -------
###INSERT cacmd

pkill -15 kined
